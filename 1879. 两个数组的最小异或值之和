class Solution {
public:
    int minimumXORSum(vector<int>& nums1, vector<int>& nums2) {
        int n = nums1.size(), inf = INT_MAX / 2;
        int mem[n][1 << n];
        memset(mem, -1, sizeof mem);
        
        auto dfs = [&](auto&& dfs, int i, int mask) -> int
        {
            if(i >= n) return 0;
            if(mem[i][mask] != -1) return mem[i][mask];

            int res = inf;
            for(int j = 0; j < n; j++)
            {
                if(mask >> j & 1) continue;
                int t = nums1[i] ^ nums2[j];
                
                res = min(res, dfs(dfs, i + 1, 1 << j | mask) + t);
            }

            return mem[i][mask] = res;
        };

        return dfs(dfs, 0, 0);
    }
};
