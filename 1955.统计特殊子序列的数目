class Solution {
public:
    int countSpecialSubsequences(vector<int>& nums) {
        int n = nums.size();
        int mod = 1e9 + 7;

        vector<vector<long long>> f(n + 1, vector<long long>(3));

        for(int i = 1; i <= n; i++)
        {
            for(int j = 0; j < 3; j++) f[i][j] = f[i - 1][j];
            if(nums[i - 1] == 0) f[i][0] = (2 * f[i - 1][0] + 1) % mod;
            if(nums[i - 1] == 1) f[i][1] = (2 * f[i - 1][1] + f[i - 1][0]) % mod;
            if(nums[i - 1] == 2) f[i][2] = (2 * f[i - 1][2] + f[i - 1][1]) % mod;
        }      

        return f[n][2];
    }
};
