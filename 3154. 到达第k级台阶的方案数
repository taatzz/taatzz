class Solution {
public:
    int waysToReachStair(int k) {
        map<array<long long, 3>, int> mem;

        auto dfs = [&](auto&& dfs, long long i, bool is_limit, int jump)->int
        {
            if(i + (1 << jump) < 0 || i > k + 1)
                return 0;
            array<long long, 3> t = { i, is_limit, jump };
            if(mem.count(t)) return mem[t];

            int res = i == k;
            if(is_limit && i)
                res += dfs(dfs, i - 1, 0, jump);
            res += dfs(dfs, i + (1 << jump), 1, jump + 1);

            return mem[t] = res;
        };

        return dfs(dfs, 1, 1, 0);
    }
};
